// <auto-generated />
using System;
using ENTITY;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ENTITY.Migrations
{
    [DbContext(typeof(T_Suenos_Context))]
    [Migration("20240427045336_FirstModelER")]
    partial class FirstModelER
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ENTITY.Cliente", b =>
                {
                    b.Property<string>("nombreUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("Celular")
                        .HasColumnType("bigint");

                    b.Property<string>("ciudadResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccionResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paisResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("primerApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("primerNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("segundoApellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("segundoNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("nombreUsuario");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ENTITY.Factura", b =>
                {
                    b.Property<int>("idFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFactura"));

                    b.Property<string>("ciudadDeEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direcionDeEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("paisDeEntrega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoDePago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoEnvio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idFactura");

                    b.HasIndex("nombreUsuario");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("ENTITY.Pedido", b =>
                {
                    b.Property<int>("idPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPedido"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("idFactura")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.HasKey("idPedido");

                    b.HasIndex("idFactura");

                    b.HasIndex("idProducto");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ENTITY.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProducto"));

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colorPrincipal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colorSecundario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colorTerciario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.HasKey("idProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ENTITY.Talla", b =>
                {
                    b.Property<int>("idTalla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTalla"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idPedido")
                        .HasColumnType("int");

                    b.Property<double>("medida")
                        .HasColumnType("float");

                    b.HasKey("idTalla");

                    b.HasIndex("idPedido");

                    b.ToTable("Tallas");
                });

            modelBuilder.Entity("ENTITY.Factura", b =>
                {
                    b.HasOne("ENTITY.Cliente", "Cliente")
                        .WithMany("listaFacturas")
                        .HasForeignKey("nombreUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ENTITY.Pedido", b =>
                {
                    b.HasOne("ENTITY.Factura", "Factura")
                        .WithMany("listaPedidos")
                        .HasForeignKey("idFactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ENTITY.Producto", "Producto")
                        .WithMany("listaPedidos")
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ENTITY.Talla", b =>
                {
                    b.HasOne("ENTITY.Pedido", "Pedido")
                        .WithMany("listaTallas")
                        .HasForeignKey("idPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("ENTITY.Cliente", b =>
                {
                    b.Navigation("listaFacturas");
                });

            modelBuilder.Entity("ENTITY.Factura", b =>
                {
                    b.Navigation("listaPedidos");
                });

            modelBuilder.Entity("ENTITY.Pedido", b =>
                {
                    b.Navigation("listaTallas");
                });

            modelBuilder.Entity("ENTITY.Producto", b =>
                {
                    b.Navigation("listaPedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
